<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MultiCashFlow.Common</name>
    </assembly>
    <members>
        <member name="T:MarketData.DataFeed">
            <summary>
            Represents a market data feed at a given date.
            </summary>
        </member>
        <member name="P:MarketData.DataFeed.SpotList">
            <summary>
            Readonly property containing the price list of the datafeed.
            </summary>
        </member>
        <member name="P:MarketData.DataFeed.Date">
            <summary>
            Readonly property containing the date of the datafeed.
            </summary>
        </member>
        <member name="M:MarketData.DataFeed.#ctor(System.DateTime,System.Collections.Generic.Dictionary{System.String,System.Double})">
            <summary>
            Constructor for the datafeed class.
            </summary>
            <param name="date">Date for the data feed.</param>
            <param name="spotList">Price list of the data feed.</param>
        </member>
        <member name="T:MarketData.MarketDataReader">
            <summary>
            Class that permits to read a csv file of share values and return a list of data feeds.
            </summary>
        </member>
        <member name="M:MarketData.MarketDataReader.ReadDataFeeds(System.String)">
            <summary>
            Main method for reading the csv file.
            </summary>
            <param name="filename">The path to the csv file.</param>
            <returns></returns>
        </member>
        <member name="T:MarketData.ShareValue">
            <summary>
            Class that stores the value of the share at a given date.
            </summary>
        </member>
        <member name="P:MarketData.ShareValue.Id">
            <summary>
            Readonly property containing the id of the share.
            </summary>
        </member>
        <member name="P:MarketData.ShareValue.DateOfPrice">
            <summary>
            Readonly property containing the considered date.
            </summary>
        </member>
        <member name="P:MarketData.ShareValue.Value">
            <summary>
            Readonly property containing the value of the share.
            </summary>
        </member>
        <member name="M:MarketData.ShareValue.#ctor(System.String,System.DateTime,System.Double)">
            <summary>
            Constructor for the class.
            </summary>
            <param name="id">Id of the share.</param>
            <param name="dateOfPrice">Date at which the share has the price.</param>
            <param name="value">Price of the share.</param>
        </member>
        <member name="T:ParameterInfo.JsonUtils.JsonIO">
            <summary>
            Helper class for conversions between <see cref="T:ParameterInfo.TestParameters"/> objects and json strings.
            </summary>
        </member>
        <member name="M:ParameterInfo.JsonUtils.JsonIO.ToJson(ParameterInfo.TestParameters)">
            <summary>
            Conversion of a <see cref="T:ParameterInfo.TestParameters"/> object into a json string
            </summary>
            <param name="testParams">The object to convert</param>
            <returns></returns>
        </member>
        <member name="M:ParameterInfo.JsonUtils.JsonIO.FromJson(System.String)">
            <summary>
            Deserialization of a json string into a <see cref="T:ParameterInfo.TestParameters"/> object.
            </summary>
            <param name="jsonDescr">Json string to deserialize.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:ParameterInfo.MarketDescription.AssetsDescription">
            <summary>
            Description of the available assets on the market, the currency in which their prices are given, the risk-free rates for all currencies and the identifier of the domestic currency.
            </summary>
        </member>
        <member name="M:ParameterInfo.MarketDescription.AssetsDescription.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ParameterInfo.MarketDescription.AssetsDescription.AssetCurrencyCorrespondence">
            <summary>
             Associate a currency to each underlying
            </summary>
        </member>
        <member name="P:ParameterInfo.MarketDescription.AssetsDescription.CurrencyRates">
            <summary>
            Associate a risk-free rate to each currency. Constraint: all currencies appearing in <see cref="P:ParameterInfo.MarketDescription.AssetsDescription.AssetCurrencyCorrespondence"/> 
            must occur as keys of this dictionary.
            </summary>
        </member>
        <member name="P:ParameterInfo.MarketDescription.AssetsDescription.DomesticCurrencyId">
            <summary>
            Id of the domestic currency. Constraint: this id must occur as a key of <see cref="P:ParameterInfo.MarketDescription.AssetsDescription.CurrencyRates"/>
            </summary>
        </member>
        <member name="T:ParameterInfo.MarketDescription.CurrencyRate">
            <summary>
            Class that provides a risk-free rate for each currency.
            </summary>
        </member>
        <member name="M:ParameterInfo.MarketDescription.CurrencyRate.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ParameterInfo.MarketDescription.CurrencyRate.Currency">
            <summary>
            The considered currency
            </summary>
        </member>
        <member name="P:ParameterInfo.MarketDescription.CurrencyRate.Rate">
            <summary>
            The corresponding rate
            </summary>
        </member>
        <member name="T:ParameterInfo.MarketDescription.UnderlyingCurrency">
            <summary>
            Class that associates a currency to each underlying asset.
            </summary>
        </member>
        <member name="M:ParameterInfo.MarketDescription.UnderlyingCurrency.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ParameterInfo.MarketDescription.UnderlyingCurrency.Underlying">
            <summary>
            The considered underlying asset
            </summary>
        </member>
        <member name="P:ParameterInfo.MarketDescription.UnderlyingCurrency.Currency">
            <summary>
            The corresponding currency
            </summary>
        </member>
        <member name="T:ParameterInfo.MathModelDescriptions.PricingParameters">
            <summary>
            Container class for the pricing parameters
            </summary>
        </member>
        <member name="P:ParameterInfo.MathModelDescriptions.PricingParameters.UnderlyingPositions">
            <summary>
            Correspondence between an underlying asset id and its position in the <see cref="P:ParameterInfo.MathModelDescriptions.PricingParameters.Volatilities"/> or <see cref="P:ParameterInfo.MathModelDescriptions.PricingParameters.Correlations"/> arrays.
            </summary>
        </member>
        <member name="P:ParameterInfo.MathModelDescriptions.PricingParameters.ForeignCurrencyPositions">
            <summary>
            Correspondence between a foreign currency id and its position in the <see cref="P:ParameterInfo.MathModelDescriptions.PricingParameters.Volatilities"/> or <see cref="P:ParameterInfo.MathModelDescriptions.PricingParameters.Correlations"/> arrays.
            </summary>
        </member>
        <member name="P:ParameterInfo.MathModelDescriptions.PricingParameters.Volatilities">
            <summary>
            The volatilies to be used in the pricer
            </summary>
        </member>
        <member name="P:ParameterInfo.MathModelDescriptions.PricingParameters.Correlations">
            <summary>
            The correlations between the assets
            </summary>
        </member>
        <member name="P:ParameterInfo.MathModelDescriptions.PricingParameters.SampleNb">
            <summary>
            The number of Monte Carlo samples
            </summary>
        </member>
        <member name="P:ParameterInfo.MathModelDescriptions.PricingParameters.RelativeFiniteDifferenceStep">
            <summary>
            The finite difference step for the computation of delta.
            </summary>
        </member>
        <member name="T:ParameterInfo.PayoffDescriptions.ConditionalCallPayoffDescription">
            <summary>
            Container class for the parameters describing the derivative product to cover.
            </summary>
        </member>
        <member name="P:ParameterInfo.PayoffDescriptions.ConditionalCallPayoffDescription.Type">
            <summary>
            Type of the payoff
            </summary>
        </member>
        <member name="P:ParameterInfo.PayoffDescriptions.ConditionalCallPayoffDescription.CreationDate">
            <summary>
            Date at which the product starts being available
            </summary>
        </member>
        <member name="P:ParameterInfo.PayoffDescriptions.ConditionalCallPayoffDescription.PaymentDates">
            <summary>
            Dates at which the product potentially pays a cashflow
            </summary>
        </member>
        <member name="P:ParameterInfo.PayoffDescriptions.ConditionalCallPayoffDescription.Strikes">
            <summary>
            Strikes for the conditional call
            </summary>
        </member>
        <member name="T:ParameterInfo.RebalancingOracleDescriptions.FixedTimesOracleDescription">
            <summary>
            Container class for an oracle that rebalances a portfolio at a regular frequency of data feeds.
            </summary>
        </member>
        <member name="M:ParameterInfo.RebalancingOracleDescriptions.FixedTimesOracleDescription.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ParameterInfo.RebalancingOracleDescriptions.FixedTimesOracleDescription.Period">
            <summary>
            Rebalancing period
            </summary>
        </member>
        <member name="P:ParameterInfo.RebalancingOracleDescriptions.FixedTimesOracleDescription.Type">
            <summary>
            Rebalancing oracle type
            </summary>
        </member>
        <member name="T:ParameterInfo.RebalancingOracleDescriptions.IRebalancingOracleDescription">
            <summary>
             Common interface for the rebalancing oracle descriptions.
            </summary>
        </member>
        <member name="P:ParameterInfo.RebalancingOracleDescriptions.IRebalancingOracleDescription.Type">
            <summary>
            Rebalancing oracle type
            </summary>
        </member>
        <member name="T:ParameterInfo.RebalancingOracleDescriptions.RebalancingOracleType">
            <summary>
            Enum of the available rebalancing oracle types.
            </summary>
        </member>
        <member name="F:ParameterInfo.RebalancingOracleDescriptions.RebalancingOracleType.Fixed">
            <summary>
            Fixed rebalancings
            </summary>
        </member>
        <member name="T:ParameterInfo.TestParameters">
            <summary>
            Container class with the entire description of the parameters necessary for running a test.
            </summary>
        </member>
        <member name="M:ParameterInfo.TestParameters.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="P:ParameterInfo.TestParameters.AssetDescription">
            <summary>
            Property containing the asset descriptions
            </summary>
        </member>
        <member name="P:ParameterInfo.TestParameters.RebalancingOracleDescription">
            <summary>
            Property containing the rebalancing oracle descriptions
            </summary>
        </member>
        <member name="P:ParameterInfo.TestParameters.NumberOfDaysInOneYear">
            <summary>
            Convention on the number of business days in a year
            </summary>
        </member>
        <member name="P:ParameterInfo.TestParameters.PayoffDescription">
            <summary>
            Description of the product to hedge
            </summary>
        </member>
        <member name="P:ParameterInfo.TestParameters.PricingParams">
            <summary>
            Parameters that are used by the pricer
            </summary>
        </member>
        <member name="T:Payoffs.Parameters.PayoffDescriptions.IPayoffDescription">
            <summary>
            Common interface for all classes that contain descriptions of derivative products.
            </summary>
        </member>
        <member name="P:Payoffs.Parameters.PayoffDescriptions.IPayoffDescription.Type">
            <summary>
            Type of the payoff
            </summary>
        </member>
        <member name="P:Payoffs.Parameters.PayoffDescriptions.IPayoffDescription.CreationDate">
            <summary>
            Date at which the product starts being available
            </summary>
        </member>
        <member name="T:Payoffs.Parameters.PayoffDescriptions.PayoffType">
            <summary>
            Enumeration of the available derivative product descriptions.
            </summary>
        </member>
        <member name="F:Payoffs.Parameters.PayoffDescriptions.PayoffType.ConditionalCall">
            <summary>
            Conditional call type
            </summary>
        </member>
        <member name="T:TimeHandler.DayCount">
            <summary>
            Helper class to count the business days between two given dates.
            </summary>
        </member>
        <member name="M:TimeHandler.DayCount.IsBusinessDay(System.DateTime)">
            <summary>
            Tests whether a given date is a business day or not
            </summary>
            <param name="date"></param>
            <returns></returns>
        </member>
        <member name="M:TimeHandler.DayCount.CountBusinessDays(System.DateTime,System.DateTime)">
            <summary>
            Counts the number of business days between two dates, excluding the first one and including the last one. 
            </summary>
            <param name="start">Start date.</param>
            <param name="end">End date.</param>
            <returns>The number of business days between start date and end date.</returns>
        </member>
        <member name="M:TimeHandler.DayCount.NextBusinessDay(System.DateTime)">
            <summary>
            Returns the closest business day that follows a given date
            </summary>
            <param name="current"></param>
            <returns></returns>
        </member>
        <member name="T:TimeHandler.IMathDateConverter">
            <summary>
            Interface for convertes that permit to convert a time distance into its mathematical counterpart. 
            </summary>
        </member>
        <member name="P:TimeHandler.IMathDateConverter.WorkingDaysPerYear">
            <summary>
            Convention on the number of business days in a year
            </summary>
        </member>
        <member name="M:TimeHandler.IMathDateConverter.ConvertToMathDistance(System.DateTime,System.DateTime)">
            <summary>
            Converts a time span into a mathematical time distance
            </summary>
            <param name="from">Start date</param>
            <param name="until">End date</param>
            <returns>The conversion of the time span</returns>
        </member>
        <member name="T:TimeHandler.MathDateConverter">
            <summary>
            Converter that permits to convert a time distance into its mathematical counterpart. 
            </summary>
        </member>
        <member name="M:TimeHandler.MathDateConverter.#ctor(System.Int32)">
            <summary>
            Default constructor
            </summary>
            <param name="workingDaysPerYear"></param>
        </member>
        <member name="P:TimeHandler.MathDateConverter.WorkingDaysPerYear">
            <summary>
            Convention on the number of business days in a year
            </summary>
        </member>
        <member name="M:TimeHandler.MathDateConverter.ConvertToMathDistance(System.DateTime,System.DateTime)">
            <summary>
            Converts a time span into a mathematical time distance
            </summary>
            <param name="from">Start date</param>
            <param name="until">End date</param>
            <returns>The conversion of the time span</returns>
        </member>
    </members>
</doc>
